on:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'
name: Run Test Cases
jobs:
  linux:
    name: CI Test On Linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.56.0
          - stable
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: sudo apt install -yqq libkrb5-dev
      - name: Install Rust nightly
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt, clippy
      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy
          default: true
          override: true
      - name: Test
        run: |
          rustup default ${{ matrix.rust }}
          make clippy test
        env:
          RUST_LOG: "debug"
          RUST_BACKTRACE: "1"
  wasm:
    name: CI Test On WASM
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.56.0
          - stable
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: wasm32-wasi
          default: true
          override: true
      - name: Install cargo-wasi
        run: cargo install cargo-wasi
      - name: Install wasmtime
        run: curl https://wasmtime.dev/install.sh -sSf | bash
      - name: Test
        run: |
          rustup default ${{ matrix.rust }}
          export WASMTIME_HOME="$HOME/.wasmtime"
          export PATH="$WASMTIME_HOME/bin:$PATH"
          make test-wasm
        env:
          RUST_LOG: "debug"
          RUST_BACKTRACE: "1"
  macos:
    name: CI Test On macOS
    runs-on: macos-latest
    strategy:
      matrix:
        rust:
          - 1.56.0
          - stable
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          brew install make
      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          components: rustfmt
          default: true
          override: true
      - name: Test
        run: |
          rustup default ${{ matrix.rust }}
          make test
        env:
          RUST_LOG: "debug"
          RUST_BACKTRACE: "1"
          SKIP_CLIPPY: "1"
  windows:
    name: CI Test On Windows
    runs-on: windows-latest
    strategy:
      matrix:
        rust:
          - 1.56.0
          - stable
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          components: rustfmt
          default: true
          override: true
      - name: Test
        run: |
          rustup default ${{ matrix.rust }}
          make test
        env:
          RUST_LOG: "debug"
          RUST_BACKTRACE: "1"
          SKIP_CLIPPY: "1"
